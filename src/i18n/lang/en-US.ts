export default {
  index: 'Serial',
  placeholder: 'Please Enter',
  placeholder_select: 'Please Select',
  loading: 'Loading...',
  add: 'Add',
  delete: 'Delete',
  batchDel: 'Batch Delete',
  edit: 'Edit',
  randomPwd: 'Use Random Password',
  copy: 'Copy',
  detail: 'Detail',
  admin: 'Admin',
  offline: 'Offline',
  offlineAll: 'Offline All',
  query: 'Query',
  export: 'Export',
  upload: 'Upload',
  handle: 'Action',
  more: 'More',
  session: 'Session',
  reset: 'Reset',
  back: 'Back',
  home: 'Home',
  confirm: 'Confirm',
  cancel: 'Cancel',
  clear: 'Clear',
  expandAll: 'Expand All',
  foldAll: 'Fold All',
  close: 'Close',
  createTime: 'Create Time',
  updateTime: 'Update Time',
  required: 'Required items cannot be empty',
  onlineUser: 'Online User',
  startDate: 'Start Date',
  endDate: 'End Date',
  to: 'To',
  hooks: {
    yes: 'Yes',
    no: 'No',
    unknown: 'Unknown',
    female: 'Female',
    male: 'Male',
  },
  msg: {
    batchDel: 'Please select the data that needs to be deleted',
    saveSuccess: 'Save Successfully',
    delSuccess: 'Delete Successfully',
    selectOne: 'Please select a data',
    selectOnlyOne: 'Only one data can be selected',
  },
  tip: {
    tip: 'Tips',
    del: 'Are you sure to perform the deletion operation?',
    relogin: 'Please log in again! ',
  },
  app: {
    title: '',
    description: '',
    logoText: '',
    miniLogoText: '',
    username: 'Username',
    password: 'Password',
    captcha: 'Captcha',
    mobileSignIn: 'Mobile SignIn',
    mobile: 'Mobile',
    signIn: 'Sign in',
    signOut: 'Sign Out',
    profile: 'Profile',
    large: 'Large',
    default: 'Default',
    small: 'Small',
    close: 'Close',
    closeOthers: 'Close Others',
    closeAll: 'Close All',
  },
  settings: {
    title: 'Layout Settings',
    sidebarDark: 'Dark Sidebar',
    sidebarLight: 'Light Sidebar',
    navbarLight: 'Light Navbar',
    navbarTheme: 'Theme Navbar',
    layout: 'Layout Switch',
    vertical: 'Vertical',
    columns: 'Columns',
    transverse: 'Transverse',
    interface: 'Interface Settings',
    uniqueOpened: 'Unique Opened',
    dark: 'Enable Dark',
    logo: 'Enable Logo',
    breadcrumb: 'Enable Breadcrumb',
    tabs: 'Enable Tabs',
    tabsCache: 'Enable Tabs Cache',
    tabsStyle: 'Tabs Style',
    tips: 'After setting, it will only take effect temporarily. To take effect permanently, you need to click the "Copy Config" button below to replace the configuration in store/theme/config.ts. ',
    copyConfig: 'Copy Config',
    reset: 'Reset',
    copySuc: 'Copy Succeeded',
    style1: 'Style-1',
    style2: 'Style2',
  },
  router: {
    dashboard: 'Dashboard',
    profile: 'Profile',
  },
  user: {
    profilePassword: 'Change Password',
    newPassword: 'New Password',
    changePwd: 'Change Password',
    tip1: 'digits',
    tip2: 'upper and lower case letters',
    tip3: 'numbers',
    tip4: 'chars',
  },
  profile: {
    username: 'Username',
    oldPassword: 'Original Password',
    newPassword: 'New Password',
    confirmPassword: 'Confirm Password',
    checkConfirmPassword: 'The passwords entered twice must be the same',
    includeNumber: 'The password must contain numbers',
    includeSpecialChar: 'The password must contain one of the following special characters',
    includeMixedCase: 'The password must contain both upper and lower case',
    maxiNumLength: 'The password length should be less than',
    miniNumLength: 'The password length needs to be greater than',
    info: 'Personal Info',
    base: 'Base Info',
    name: 'Name',
    org: 'Organization',
    role: 'Role',
    station: 'Station',
  },
  role: {
    role: 'Role',
    roleName: 'Role Name',
    remark: 'Remark',
    roleAuth: 'Role Auth',
    distribute: 'Distribute User',
    member: 'Role Member',
  },
  userManage: {
    user: 'User',
    select: 'Select User',
    userName: 'User Name',
    userCode: 'User Code',
    dept: 'Department',
    station: 'Station',
    mobile: 'Mobile',
    email: 'Email',
    createTime: 'Create Time',
    isEnable: 'Is Disable',
    isAdmin: 'Is Admin',
    enable: 'Enable',
    disable: 'Disable',
    jobNumber: 'Job Number',
    password: 'Password',
    gender: 'Gender',
    roles: 'Roles',
    kick: 'Kick',
    session: 'User Session',
  },
  application: {
    application: 'Application',
    name: 'Application Name',
    fullName: 'Application Full Name',
    code: 'Application Code',
    remarks: 'Application Comments',
    url: 'Application URL',
    icon: 'Application Icon',
  },
  menu: {
    menu: 'Function Menu',
    _menu: 'Menu',
    component: 'Component',
    func: 'Function',
    btn: 'Button',
    name: 'Name',
    code: 'Code',
    remarks: 'Remarks',
    url: 'URL',
    icon: 'Icon',
    type: 'Type',
    auth: 'Authorization',
    preMenu: 'Previous Menu',
    tips: 'Multiple use "," space, such as: sys: menu: save, sys: menu: an update',
    tips2: 'Please select the application first',
    app: 'Application',
  },
  org: {
    org: 'Organization',
    code: 'Organization Code',
    name: 'Organization Name',
    type: 'Organization Type',
    parent: 'Superior Organization',
    addr: 'Organization Address',
    remarks: 'Comments',
    addUser: 'Add User',
  },
  station: {
    station: 'Station',
    code: 'Station Code',
    name: 'Station Name',
    createTime: 'Create Time',
    remarks: 'Comments',
    auth: 'Station Auth',
    distribute: 'Distribute User',
    member: 'Station Member',
  },
  dict: {
    dict: 'Dictionary',
    name: 'Dict Name',
    code: 'Dict Code',
    isSys: 'Is System',
    isDef: 'Is Default',
    inure: 'Inure',
    remarks: 'Remarks',
    createTime: 'Create Time',
    setting: 'Setting',
    label: 'Label',
    value: 'Value',
    frontName: 'Front Option',
    frontOption: 'Front Option Value',
    tableName: 'Table Name',
  },
  param: {
    param: 'Parameter',
    key: 'Param Key',
    value: 'Param Value',
    type: 'Sys Param',
    name: 'Param Name',
    remark: 'Remark',
    createTime: 'Create Time',
  },
  online: {
    loginTime: 'Login Time',
    ip: 'IP Address',
    addr: 'Login Address',
    code: 'User Code',
    name: 'User Name',
  },
  config: {
    config: 'System Config',
    value: 'Config Value',
    name: 'Config Name',
    remark: 'Remarks',
    date: 'Record Date',
  },
  log: {
    name: 'User Name',
    ip: 'IP Address',
    addr: 'Login Address',
    agent: 'User Agent',
    loginStatus: 'Login Status',
    operation: 'Operation',
    createTime: 'Login Time',
    module: 'Module',
    url: 'Request URL',
    method: 'Request Method',
    operateType: 'Operate Type',
    operateStatus: 'Operate Status',
    duration: 'Duration',
    operateName: 'Operate Name',
    reqParams: 'Request Params',
    resultMsg: 'Result Message',
  },
  tenant: {
    tenant: 'Tenant',
    admin: 'Tenant Admin',
    name: 'Tenant Name',
    fullName: 'Tenant Full Name',
    remark: 'Remarks',
    createTime: 'Create Time',
    distribute: 'Distribute Admin',
  },
  plugin: {
    plugin: 'Plugin',
    url: 'Plugin Url',
    name: 'Plugin Name',
    remark: 'Remarks',
    createTime: 'Create Time',
  },
}
